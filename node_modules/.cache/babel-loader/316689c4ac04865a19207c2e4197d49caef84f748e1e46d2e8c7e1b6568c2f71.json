{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      state.changed = true;\n      const newItem = action.payload;\n      const existingItem = state.items.length > 0 && state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + existingItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      state.changed = true;\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const cartAction = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","length","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","cartAction","actions"],"sources":["D:/Projects/Projects/redux-project/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {items: [], totalQuantity: 0, changed: false},\r\n    reducers:{\r\n        replaceCart( state, action ){\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items;\r\n        },\r\n        addItemToCart( state, action ){\r\n            state.changed = true;\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.length > 0 && state.items.find((item) => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            if(!existingItem){\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                });\r\n            } else {\r\n                    existingItem.quantity++;\r\n                    existingItem.totalPrice = existingItem.totalPrice + existingItem.price;\r\n            }\r\n        },\r\n        removeItemFromCart(state, action){\r\n            state.changed = true;\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            state.totalQuantity--;\r\n            if(existingItem.quantity === 1){\r\n                state.items = state.items.filter(item => item.id !== id)\r\n            }else{\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price\r\n            }\r\n\r\n        }\r\n    }\r\n});\r\n\r\nexport const cartAction = cartSlice.actions;\r\n\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAACC,KAAK,EAAE,EAAE;IAAEC,aAAa,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAK,CAAC;EAC3DC,QAAQ,EAAC;IACLC,WAAWA,CAAEC,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACJ,aAAa,GAAGK,MAAM,CAACC,OAAO,CAACN,aAAa;MAClDI,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO,CAACP,KAAK;IACtC,CAAC;IACDQ,aAAaA,CAAEH,KAAK,EAAEC,MAAM,EAAE;MAC1BD,KAAK,CAACH,OAAO,GAAG,IAAI;MACpB,MAAMO,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,YAAY,GAAGL,KAAK,CAACL,KAAK,CAACW,MAAM,GAAG,CAAC,IAAIN,KAAK,CAACL,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACjGT,KAAK,CAACJ,aAAa,EAAE;MACrB,IAAG,CAACS,YAAY,EAAC;QACbL,KAAK,CAACL,KAAK,CAACe,IAAI,CAAC;UACbD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAET,OAAO,CAACO,KAAK;UACzBlB,IAAI,EAAEW,OAAO,CAACU;QAClB,CAAC,CAAC;MACN,CAAC,MAAM;QACCT,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACM,KAAK;MAC9E;IACJ,CAAC;IACDI,kBAAkBA,CAACf,KAAK,EAAEC,MAAM,EAAC;MAC7BD,KAAK,CAACH,OAAO,GAAG,IAAI;MACpB,MAAMY,EAAE,GAAGR,MAAM,CAACC,OAAO;MACzB,MAAMG,YAAY,GAAGL,KAAK,CAACL,KAAK,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DT,KAAK,CAACJ,aAAa,EAAE;MACrB,IAAGS,YAAY,CAACO,QAAQ,KAAK,CAAC,EAAC;QAC3BZ,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACqB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAI;QACDJ,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACM,KAAK;MAC1E;IAEJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMM,UAAU,GAAGzB,SAAS,CAAC0B,OAAO;AAE3C,eAAe1B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}