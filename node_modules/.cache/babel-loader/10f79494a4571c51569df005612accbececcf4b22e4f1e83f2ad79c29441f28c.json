{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          id: existingItem.id,\n          price: existingItem.price,\n          quantity: 1,\n          totalPrice: existingItem.totalPrice,\n          name: existingItem.name\n        });\n      } else {\n        existingItem.price++;\n        existingItem.totalPrice = existingItem.totalPrice + existingItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity) {\n        state.items = state.items.filter(item => item.id === id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n  }\n});\nexport const cartSliceAction = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","removeItemFromCart","filter","cartSliceAction","actions"],"sources":["D:/Projects/Projects/redux-project/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {items: [], totalQuantity: 0},\r\n    reducers:{\r\n        addItemToCart( state, action ){\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id);\r\n            if(!existingItem){\r\n                state.items.push({\r\n                    id: existingItem.id,\r\n                    price: existingItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: existingItem.totalPrice,\r\n                    name: existingItem.name\r\n                });\r\n            } else {\r\n                    existingItem.price++;\r\n                    existingItem.totalPrice= existingItem.totalPrice + existingItem.price;\r\n            }\r\n        },\r\n        removeItemFromCart(state, action){\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            if(existingItem.quantity){\r\n                state.items = state.items.filter(item => item.id === id)\r\n            }else{\r\n                existingItem.quantity--;\r\n            }\r\n\r\n        }\r\n    }\r\n});\r\n\r\nexport const cartSliceAction = cartSlice.actions;\r\n\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAACC,KAAK,EAAE,EAAE;IAAEC,aAAa,EAAE;EAAC,CAAC;EAC3CC,QAAQ,EAAC;IACLC,aAAaA,CAAEC,KAAK,EAAEC,MAAM,EAAE;MAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACrE,IAAG,CAACH,YAAY,EAAC;QACbJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACbD,EAAE,EAAEH,YAAY,CAACG,EAAE;UACnBE,KAAK,EAAEL,YAAY,CAACK,KAAK;UACzBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEP,YAAY,CAACO,UAAU;UACnCjB,IAAI,EAAEU,YAAY,CAACV;QACvB,CAAC,CAAC;MACN,CAAC,MAAM;QACCU,YAAY,CAACK,KAAK,EAAE;QACpBL,YAAY,CAACO,UAAU,GAAEP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;MAC7E;IACJ,CAAC;IACDG,kBAAkBA,CAACZ,KAAK,EAAEC,MAAM,EAAC;MAC7B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7D,IAAGH,YAAY,CAACM,QAAQ,EAAC;QACrBV,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACiB,MAAM,CAACP,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAI;QACDH,YAAY,CAACM,QAAQ,EAAE;MAC3B;IAEJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMI,eAAe,GAAGrB,SAAS,CAACsB,OAAO;AAEhD,eAAetB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}