{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartAction } from \"./cart-slice\";\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://reduxcart-dc195-default-rtdb.firebaseio.com/cart.json', {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed!');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Cart data sent successfully'\n      }));\n    } catch (err) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: err.message\n      }));\n    }\n  };\n};\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://reduxcart-dc195-default-rtdb.firebaseio.com/cart.json');\n      if (!response) {\n        throw new Error('Error in fetching cart Data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartAction.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (err) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: err.message\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartAction","sendCartData","cart","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","err","fetchCartData","fetchData","data","json","cartData","replaceCart","items","totalQuantity"],"sources":["D:/Projects/Projects/redux-project/01-starting-project/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\r\nimport { cartAction } from \"./cart-slice\";\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async(dispatch) => {\r\n        dispatch(\r\n            uiActions.showNotification({\r\n              status: 'pending',\r\n              title: 'Sending...',\r\n              message: 'Sending cart data',\r\n            })\r\n          );\r\n        const sendRequest = async() => {\r\n            const response = await fetch('https://reduxcart-dc195-default-rtdb.firebaseio.com/cart.json',{\r\n              method: \"PUT\",\r\n              body: JSON.stringify(cart),\r\n            });\r\n            if(!response.ok){\r\n              throw new Error('Sending cart data failed!');   \r\n            }\r\n        };\r\n        try{\r\n           await sendRequest();           \r\n           dispatch(\r\n            uiActions.showNotification({\r\n              status: 'success',\r\n              title: 'Success!',\r\n              message: 'Cart data sent successfully',\r\n            })\r\n          );\r\n        }\r\n        catch(err){\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                  status: 'error',\r\n                  title: 'Error',\r\n                  message: err.message,\r\n                })\r\n              );\r\n        }  \r\n    }\r\n}\r\n\r\nexport const fetchCartData = () => {\r\n    return async (dispatch) => {\r\n        const fetchData = async () => {\r\n            const response = await fetch('https://reduxcart-dc195-default-rtdb.firebaseio.com/cart.json');\r\n            if(!response){\r\n                throw new Error('Error in fetching cart Data!');\r\n            }\r\n            const data = await response.json();\r\n            return data;\r\n        }\r\n        try{\r\n            const cartData = await fetchData();\r\n            dispatch(cartAction.replaceCart({\r\n                items: cartData.items || [],\r\n                totalQuantity: cartData.totalQuantity\r\n            }));\r\n        }catch (err){\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                  status: 'error',\r\n                  title: 'Error',\r\n                  message: err.message,\r\n                })\r\n              );\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,UAAU,QAAQ,cAAc;AAEzC,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAMC,QAAQ,IAAK;IACtBA,QAAQ,CACJJ,SAAS,CAACK,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IACH,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAW;MAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+DAA+D,EAAC;QAC3FC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;MAC3B,CAAC,CAAC;MACF,IAAG,CAACO,QAAQ,CAACM,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACJ,CAAC;IACD,IAAG;MACA,MAAMR,WAAW,CAAC,CAAC;MACnBL,QAAQ,CACPJ,SAAS,CAACK,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CACD,OAAMU,GAAG,EAAC;MACNd,QAAQ,CACJJ,SAAS,CAACK,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAEU,GAAG,CAACV;MACf,CAAC,CACH,CAAC;IACP;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMW,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAO,MAAOf,QAAQ,IAAK;IACvB,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,+DAA+D,CAAC;MAC7F,IAAG,CAACD,QAAQ,EAAC;QACT,MAAM,IAAIO,KAAK,CAAC,8BAA8B,CAAC;MACnD;MACA,MAAMI,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACf,CAAC;IACD,IAAG;MACC,MAAME,QAAQ,GAAG,MAAMH,SAAS,CAAC,CAAC;MAClChB,QAAQ,CAACH,UAAU,CAACuB,WAAW,CAAC;QAC5BC,KAAK,EAAEF,QAAQ,CAACE,KAAK,IAAI,EAAE;QAC3BC,aAAa,EAAEH,QAAQ,CAACG;MAC5B,CAAC,CAAC,CAAC;IACP,CAAC,QAAOR,GAAG,EAAC;MACRd,QAAQ,CACJJ,SAAS,CAACK,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAEU,GAAG,CAACV;MACf,CAAC,CACH,CAAC;IACP;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}